// Generated by CoffeeScript 1.3.3
(function() {
  var Arr_Func_Perm, num_to_arr, table, _;

  _ = require("underscore");

  _.str = require("underscore.string");

  num_to_arr = function(num, pre) {
    var c, chars, _i, _len, _results;
    chars = (_.str.sprintf("%0" + pre + "d", parseInt(num.toString(2)))).split('');
    _results = [];
    for (_i = 0, _len = chars.length; _i < _len; _i++) {
      c = chars[_i];
      _results.push(Boolean(parseInt(c)));
    }
    return _results;
  };

  table = function(n) {
    var range, v, _i, _len, _results;
    range = _.range(Math.pow(2, n));
    _results = [];
    for (_i = 0, _len = range.length; _i < _len; _i++) {
      v = range[_i];
      _results.push(num_to_arr(v, n));
    }
    return _results;
  };

  Arr_Func_Perm = (function() {

    function Arr_Func_Perm(arr) {
      this.arr = arr;
    }

    Arr_Func_Perm.prototype.perm = function(func) {
      var apply, final, i, indexes, inds, new_arr, total, v, _i, _j, _len, _len1;
      total = this.arr.length * this.arr.length;
      i = 0;
      indexes = table(this.arr.length);
      final = [];
      for (_i = 0, _len = indexes.length; _i < _len; _i++) {
        inds = indexes[_i];
        new_arr = (function() {
          var _j, _len1, _ref, _results;
          _ref = this.arr;
          _results = [];
          for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
            v = _ref[_j];
            _results.push(v);
          }
          return _results;
        }).call(this);
        for (i = _j = 0, _len1 = inds.length; _j < _len1; i = ++_j) {
          apply = inds[i];
          if (apply) {
            new_arr[i] = func(new_arr[i]);
          }
        }
        final.push(new_arr);
      }
      return final;
    };

    return Arr_Func_Perm;

  })();

  module.exports = function(arr) {
    return new Arr_Func_Perm(arr);
  };

}).call(this);
